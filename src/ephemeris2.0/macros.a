
%define BUF_SIZ 512
%define ENV_SIZ 512
%define SCRIPT_SIZ 4096
%define PROMPT_STRING 'Ephemeris>'
%define ESCAPE_CHAR 0x5C
%define COMMENT_CHAR 0x23
%define VARIABLE_CHAR 0x24
%define HELP_COLS 3

;; Note: all system calls should be called from inside macros, for portability

; Macro:  write a single char to stdout 
%macro PRINT_CHAR 1
		     push ebx
		     push ecx
		     push edx
		     mov eax,4
		     mov ebx,1 
		     mov BYTE [newline],%1
		     mov ecx, newline   
		     mov edx,1
		     int 0x80
		     pop edx
		     pop ecx
                     pop ebx
%endmacro 

; Macro: use Linux write system call to write a string to stdout  
; See first block after main_loop below for commenting
%macro PRINT_STRING 1	 
	push eax
	push ebx
	push ecx
	push edx
	mov ebx,1 
        mov ecx,%1
	push ecx 
        call my_strlen   
        pop ecx      
	mov edx,eax  
        mov eax,4   
        int 0x80 
	pop edx
	pop ecx
	pop ebx
	pop eax
%endmacro

%macro READ_LINE 1

	push ebx
	push ecx
	push edx
	mov eax,3                
	mov ebx,0               
	mov ecx,%1       
	mov edx,BUF_SIZ   
	int 0x80                 
	pop edx
	pop ecx
	pop ebx
%endmacro

%macro TERMINATE 1
	mov eax,1	      
	mov ebx,%1      
	int 0x80   
%endmacro 

;; SBRK  return in eax value of current BRK   
%macro SBRK 0 
	push ebx
	mov ebx,0x00
	mov eax,0x2d
	int 80h
	pop ebx
%endmacro
	 

	
	

