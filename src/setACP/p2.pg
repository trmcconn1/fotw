# Problem 2 of ACP test. All problems are multiple choice.
# This is a problem on distributing minus signs. The student
# must calculate -(a + b)-(c + d) where a-d are small signed integers.

# Boilerplate: every webwork problem starts with the following two macros 

DOCUMENT();


loadMacros(
	"PG.pl",
	"PGbasicmacros.pl",
	"PGanswermacros.pl",
	"PGchoicemacros.pl",
	"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem(), $BR, $BBOLD, "Problem 2", $EBOLD, $BR);


# returns a permutation of 0-3 as a list. Used below to randomize
# multiple choice

sub myshuffle {

	my $a = random(0,3,1);
	my $b = ($a + random(1,3,1)) % 4;
	my $c = random(0,3,1);
	while (  $c == $a || $c == $b ) {
		 $c = random(0,3,1);
	}
	return ($a, $b, $c, 6 - $a - $b - $c);
}

# Generate the numbers that will be used in the problem:

$a = random(1,21,2);   # a + c is odd
$c = random(2,20,2);

$d = random(-21,-1,2);
$b = random(-21,-1,2); # c + d is even

# compute correct and incorrect answers to display (correct is first one)
# see the previous problem (p1) for discussion about why these must always
# be unique.
@ans = (-$a-$b-$c-$d,-$a+$b-$c+$d,$a-$b+$c-$d,$a+$b+$c+$d);

# get a permutation of 0-3 to shuffle display
@picks = myshuffle;
 
$ansA = $ans[$picks[0]]; 
$ansB = $ans[$picks[1]]; 
$ansC = $ans[$picks[2]]; 
$ansD = $ans[$picks[3]]; 

# OL pg macro formats a list argument as an html ordered list counting A,B,...
$answers = OL($ansA,$ansB,$ansC,$ansD);

# display problem
# Note that this will display properly since b and d are negative while
# a and c are positive.

BEGIN_TEXT
- ( $b + $a ) - ( $d + $c ) is equal to: 
$PAR
$answers
$PAR
Enter your choice (A,B,C, or D.): \{ ans_rule(10) \}
$PAR
END_TEXT

# figure out which letter choice is correct

$letter = "A" if $picks[0] == 0;
$letter = "B" if $picks[1] == 0;
$letter = "C" if $picks[2] == 0;
$letter = "D" if $picks[3] == 0;

ANS( str_cmp( $letter ) );

ENDDOCUMENT();
