# Problem 32 of ACP test. 
#
# Distance formula
# This problem has only 4 possible answers

# Boilerplate: every webwork problem starts with the following two macros 

DOCUMENT();


loadMacros(
	"PG.pl",
	"PGbasicmacros.pl",
	"PGanswermacros.pl",
	"PGchoicemacros.pl",
	"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem(), $BR, $BBOLD, "Problem 32", $EBOLD, $BR);


# returns a permutation of 0-3 as a list. Used below to randomize
# multiple choice

sub myshuffle {

	my $a = random(0,3,1);
	my $b = ($a + random(1,3,1)) % 4;
	my $c = random(0,3,1);
	while (  $c == $a || $c == $b ) {
		 $c = random(0,3,1);
	}
	return ($a, $b, $c, 6 - $a - $b - $c);
}

# Returns a permutation of 0-4 as a list. Many problems on the second half
# of the ACP test have 5 choices.

sub mybigshuffle {

	my $a = random(0,3,1);
	my $b = ($a + random(1,3,1)) % 4;
	my $c = random(0,3,1);
	my $d = random(0,4,1);
	while (  $c == $a || $c == $b ) {
		 $c = random(0,3,1);
	}

	if( $d == 0 ){ return ( 4, $a,  $b, $c, 6 - $a - $b - $c); }
	if( $d == 1 ){ return ( $a, 4,  $b, $c, 6 - $a - $b - $c); }
	if( $d == 2 ){ return ( $a, $b, 4,  $c, 6 - $a - $b - $c); }
	if( $d == 3 ){ return ( $a, $b, $c, 4,  6 - $a - $b - $c); }
	if( $d == 4 ){ return ( $a, $b, $c, 6 - $a - $b - $c,  4); }

}


# Generate the numbers that will be used in the problem:
# We ask for the distance from (a,b) to (c,d). 
# The a,b,c,d must be chosen very carefully so that the 4 possible answers
# will be unique. Run unique32.c for a proof that these work:
@as = (-2,1,2);
@bs = (-3,7,4);
@cs = (-7,8,5);
@ds = (-1,-5,6);
$i = random(0,2,1);
$a = $as[$i];
$j = random(0,2,1);
$b = $bs[$j];
$k = random(0,2,1);
$c = $cs[$k];
$l = random(0,2,1);
$d = $ds[$l];
$d12 = ($c-$a)**2 + ($d-$b)**2;
$d22 = abs($c-$a) + abs($d-$b);
$d32 = ($b-$a)**2 + ($d-$c)**2;
$d42 = ($c-$b)**2 + ($d-$a)**2;


#  correct and incorrect answers to display (correct is first one)

@ans = ("\sqrt{$d12}","$d22","\sqrt{$d32}","\sqrt{$d42}");


# get a permutation of 0-3 to shuffle display
@picks = myshuffle;
 
$ansA = $ans[$picks[0]]; 
$ansB = $ans[$picks[1]]; 
$ansC = $ans[$picks[2]]; 
$ansD = $ans[$picks[3]]; 


# display problem

BEGIN_TEXT
The distance between the points \( ($a,$b) \) and \( ($c,$d) \) is:
$PAR
A) \( $ansA \)
$BR
B) \( $ansB \)
$BR
C) \( $ansC \)
$BR
D) \( $ansD \)
$PAR
Enter your choice (A,B,C, or D.): \{ ans_rule(10) \}
$PAR
END_TEXT

# figure out which letter choice is correct

$letter = "A" if $picks[0] == 0;
$letter = "B" if $picks[1] == 0;
$letter = "C" if $picks[2] == 0;
$letter = "D" if $picks[3] == 0;

ANS( str_cmp( $letter ) );

ENDDOCUMENT();
