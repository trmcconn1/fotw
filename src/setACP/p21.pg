# Problem 21 of ACP test. All problems are multiple choice.
# Setting up a pair of equations needed to solve a simple "word problem"

# Boilerplate: every webwork problem starts with the following two macros 

DOCUMENT();


loadMacros(
	"PG.pl",
	"PGbasicmacros.pl",
	"PGanswermacros.pl",
	"PGchoicemacros.pl",
	"PGauxiliaryFunctions.pl"
);

TEXT(beginproblem(), $BR, $BBOLD, "Problem 21", $EBOLD, $BR);


# returns a permutation of 0-3 as a list. Used below to randomize
# multiple choice

sub myshuffle {

	my $a = random(0,3,1);
	my $b = ($a + random(1,3,1)) % 4;
	my $c = random(0,3,1);
	while (  $c == $a || $c == $b ) {
		 $c = random(0,3,1);
	}
	return ($a, $b, $c, 6 - $a - $b - $c);
}

# Generate the numbers that will be used in the problem:

@xList = (.33,.41,.27);     # These are small dollar amounts. (Solutions for 
@yList = (.39,.21,.53);     # x and y in a pair of equations.)
                            # The rest are coefficients in the equations.
@mList = (8,10,12,16);      # The m,n,k and l lists should yield distinct
@nList = (7,11,13,17);      # quadruples with m*l - n*k not zero. This makes
@kList = (5,9,19,15);       # the equations independent. It will hold since m
@lList = (4,6,14,20);       # and l are even, while n and k are odd.

$i = random(0,2,1);
$x = $xList[$i];     # Random element of list x
$i = random(0,2,1);
$y = $yList[$i];     # " " " " y
$i = random(0,3,1);
$m = $mList[$i];     # " " " " m
$i = random(0,3,1);
$n = $nList[$i];     # " " " " n
$i = random(0,3,1);
$k = $kList[$i];     # " " " " k
$i = random(0,3,1);
$l = $lList[$i];     # " " " " l
$mpn = $m + $n;
$kpl = $k + $l;
$mpk = $m + $k;
$npl = $n + $l;
$a = ($m*$x + $n*$y);
$b = ($k*$x + $l*$y);
$rhs1 = 100*($m*$x + $n*$y);  # Correct right sides of equations
$rhs2 = 100*($k*$x + $l*$y);
$apb = $a + $b;

# m oranges and n lemons cost $a while k oranges and l lemons cost $b. A pair
# of equations appropriate for determining the price of each is:
#
# (i)  mx + ny = rhs1
#      kx + ly = rhs2
# 
# (ii) (m+n)(x+y) = rhs1
#      (k+l)(x+y) = rhs2
#
# (iii) x+y = m+n
#       (m+k)x + (n+l)y = (rhs1+rhs2)/100 
#
# (iv)  mx + ly = rhs1
#       kx + ny = rhs2

# Uniqueness: clear since m,n,k,l are all distinct.  

# compute correct and incorrect answers to display (correct is first one)

@ans = ("${m}x + ${n}y = $rhs1, ${k}x + ${l}y = $rhs2",
"${mpn}(x + y) = $rhs1, ${kpl}(x + y) = $rhs2",
"x + y = $mpn, ${mpk}x + ${npl}y = $apb",
"${m}x + ${l}y = $rhs1, ${k}x + ${n}y = $rhs2");


# get a permutation of 0-3 to shuffle display
@picks = myshuffle;
 
$ansA = $ans[$picks[0]]; 
$ansB = $ans[$picks[1]]; 
$ansC = $ans[$picks[2]]; 
$ansD = $ans[$picks[3]]; 


# display problem

BEGIN_TEXT
$m oranges and $n lemons cost $DOLLAR$a while $k oranges and $l lemons cost
$DOLLAR$b. A pair of equations appropriate for determining the price of each
is  
$PAR
A) \( $ansA \)
$BR
B) \( $ansB \)
$BR
C) \( $ansC \)
$BR
D) \( $ansD \)
$PAR
Enter your choice (A,B,C, or D.): \{ ans_rule(10) \}
$PAR
END_TEXT

# figure out which letter choice is correct

$letter = "A" if $picks[0] == 0;
$letter = "B" if $picks[1] == 0;
$letter = "C" if $picks[2] == 0;
$letter = "D" if $picks[3] == 0;

ANS( str_cmp( $letter ) );

ENDDOCUMENT();
