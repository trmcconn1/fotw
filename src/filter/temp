example.l:/*      options: default: reverse by word = string of alphanumerics
example.l:		-P:  reverse by  Word = string of non whitespace
example.l:	options: default: reverse by word = string of alphanumerics.
example.l:		-P:  reverse by  Word = string of non whitespace
example.l:#include <string.h>
example.l:/* reverse: reverse a string s in place */
ff.out.l:/*      options: default: reverse by word = string of alphanumerics
ff.out.l:		-W:  reverse by  Word = string of non whitespace
ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
ff.out.l:		     by this string. The string is assumed to occur just
ff.out.l:	options: default: reverse by word = string of alphanumerics.
ff.out.l:		-W:  reverse by  Word = string of non whitespace
ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
ff.out.l:		     by this string. The string is assumed to occur just
ff.out.l:/* reverse: reverse a string s in place */
ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
ff.out.latest:		-W:  reverse by  Word = string of non whitespace
ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
ff.out.latest:		     by this string. The string is assumed to occur just
ff.out.latest:	options: default: reverse by word = string of alphanumerics.
ff.out.latest:		-W:  reverse by  Word = string of non whitespace
ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
ff.out.latest:		     by this string. The string is assumed to occur just
ff.out.latest:/* reverse: reverse a string s in place */
fgn.l:%s normal regexp code comment string copyall 
fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
fgn.y:In the literal block the user can (and should) #define a string called
fgn.y:option -help. (There is a default info string which is not helpful.)
fgn.y:the end of options. It is available in the string char *clvar.
fgn.y:#include <string.h>
fgn.y:static char stringbuf[BUFSIZE];
fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
fgn.y:	clearbuf(stringbuf,BUFSIZE);
fgn.y:	bufptr = stringbuf;
fgn.y:	clearbuf(stringbuf,BUFSIZE);
fgn.y:	bufptr = stringbuf;
fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
fgn.y:	fprintf(ffout,"#include <string.h>\n");
fgn.y:		bufptr=stringbuf;}
fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
fgn.y:		strcp(stringbuf); /* store regexp string */
fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
fgn.y:		bufptr = stringbuf; }
fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
fgn.y:		strcp(stringbuf); /* copy code */
fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
fgn.y:		bufptr = stringbuf; }
fgn.y:string: /* empty */
fgn.y:	| string CHAR {*bufptr++ =$2;}
fgn.y:	| string arg    { /* append the arg back to regexp string */
fgn.y:	| string ARG_TAG { int i = $2;
fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
fgn.y:	bufptr = stringbuf;
filter:	options: default: reverse by word = string of alphanumerics.
filter:		-W:  reverse by  Word = string of non whitespace
filter:		-d:  next argument is a string. Reverse blocks delimited
filter:		     by this string. The string is assumed to occur just
lex.yy.c:#define string 5
lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
lex.yy.c:case YY_STATE_EOF(string):
temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:example.l:#include <string.h>
temp:example.l:/* reverse: reverse a string s in place */
temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:ff.out.l:/* reverse: reverse a string s in place */
temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:fgn.l:%s normal regexp code comment string copyall 
temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:fgn.y:#include <string.h>
temp:fgn.y:static char stringbuf[BUFSIZE];
temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:fgn.y:	bufptr = stringbuf;
temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:fgn.y:	bufptr = stringbuf;
temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:fgn.y:		bufptr=stringbuf;}
temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:fgn.y:		bufptr = stringbuf; }
temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:fgn.y:		bufptr = stringbuf; }
temp:fgn.y:string: /* empty */
temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:fgn.y:	bufptr = stringbuf;
temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:filter:		     by this string. The string is assumed to occur just
temp:lex.yy.c:#define string 5
temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:example.l:#include <string.h>
temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:fgn.y:#include <string.h>
temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:fgn.y:string: /* empty */
temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:lex.yy.c:#define string 5
temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\$[0-9]  {int i = yytext[2]-'1'+1;yylval.integer = i;return ARG_TAG;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\\\\$[0-9]  {/* Literal \$ */ yylval.str="\\$"; return BACKDOLLAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[ntvbrfa\\?'"]     { yylval.str=yytext;return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\[0-7]{1,3}     {/* octal */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\\x[0-9a-fA-F]+     {/* hex */ yylval.str=strdup(yytext);return C_ESCAPE;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>\"     { BEGIN code; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<string>.       { yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:In the literal block the user can (and should) #define a string called
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:option -help. (There is a default info string which is not helpful.)
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:the end of options. It is available in the string char *clvar.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:static char stringbuf[BUFSIZE];
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:sourcefile: rules string ENDFILE { printf("sourcefile parsed\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);YYACCEPT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:literal_block: LITERAL_BEGIN  string	LITERAL_END  {
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	 fprintf(ffout,"%s",stringbuf);clearbuf(stringbuf,BUFSIZE);
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	fprintf(ffout,"#include <string.h>\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr=stringbuf;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:regexp:	'/'	string  	'/' {option_node.pattern =
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* store regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:code:	'{'	string  	'}' { option_node.action_code = 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		strcp(stringbuf); /* copy code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		clearbuf(stringbuf,BUFSIZE); /* reset */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:		bufptr = stringbuf; }
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:string: /* empty */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string CHAR {*bufptr++ =$2;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string arg    { /* append the arg back to regexp string */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ARG_TAG { int i = $2;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string C_ESCAPE { /* C-escape sequence in code */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKSLASHES { /* Literal \, ie \\ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string SLASH { /* Literal /, ie \/ in regexp */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string BACKDOLLAR  { /* A literal \$ in code. Don't laugh, it
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string  '\n' {yyerror("Newline in string.\n");
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	| string ENDCOMMANDS {yyerror("Unexpected end of file\n");YYABORT;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.y:	bufptr = stringbuf;
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:filter:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:#define string 5
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:/* This used to be an fputs(), but since the string might contain NUL's,
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:lex.yy.c:case YY_STATE_EOF(string):
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:		-P:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:#include <string.h>
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:example.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.l:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/*      options: default: reverse by word = string of alphanumerics
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:	options: default: reverse by word = string of alphanumerics.
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-W:  reverse by  Word = string of non whitespace
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		-d:  next argument is a string. Reverse blocks delimited
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:		     by this string. The string is assumed to occur just
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:ff.out.latest:/* reverse: reverse a string s in place */
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:%s normal regexp code comment string copyall 
temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:temp:fgn.l:<code>\"	{ BEGIN string; yylval.chr=yytext[0];return CHAR;}
