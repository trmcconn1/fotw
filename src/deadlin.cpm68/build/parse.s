* Generated by c68 5.1 (beta) 25 Apr 2002 (Dec 21 2014) from "build/_parse.c"
* Compilation date/time: Tue Dec 23 15:09:58 2014

	.text
L21:
	dc.b	$4e,$6f,$74,$20,$66,$6f,$75,$6e,$64,$a,$0
L20:
	dc.b	$4f,$2e,$4b,$2e,$3f,$20,$0
L19:
	dc.b	$a,$4,$0
L18:
	dc.b	$46,$69,$6c,$65,$20,$6e,$6f,$74,$20,$66,$6f,$75
	dc.b	$6e,$64,$a,$0
L17:
	dc.b	$72,$0
L15:
	dc.b	$7,$0
L14:
	dc.b	$25,$39,$64,$3a,$20,$0
L13:
	dc.b	$25,$39,$64,$3a,$2a,$0
L12:
	dc.b	$20,$9,$a,$3b,$4,$0
L11:
	dc.b	$a,$0
L10:
	dc.b	$41,$62,$6f,$72,$74,$20,$65,$64,$69,$74,$28,$59
	dc.b	$2f,$4e,$29,$3f,$20,$0
L9:
	dc.b	$61,$0
L8:
	dc.b	$2e,$24,$24,$24,$0
L6:
	dc.b	$2a,$0
L5:
	dc.b	$25,$73,$0
	.even
	.globl _Parse
_Parse:
	bra	L22
L23:
	clr.w	-2(a6)
	clr.w	-4(a6)
	clr.w	-6(a6)
	clr.w	-8(a6)
	tst.b	L1
	bne	L24
	pea	L6
	pea	L5
	pea	__iob+28
	jsr	_fprintf
	move.l	_LineBuf,-(a7)
	move.l	8(a6),-(a7)
	jsr	_ReadLine
	tst.w	d0
	addq.w	#8,a7
	bne	L25
	moveq	#0,d0
	bra	L26
	bra	L27
L25:
	move.l	_LineBuf,-(a7)
	pea	L1
	jsr	_strcpy
	addq.w	#8,a7
L27:
	lea	12(a7),a7
L24:
	pea	L1
	jsr	_strlen
	move.w	d0,-6(a6)
	move.l	#L2,(a7)
	pea	L1
	jsr	_GetNextCmd
	move.w	d0,-4(a6)
	addq.w	#8,a7
	beq	L28
	pea	-10(a6)
	pea	L2
	jsr	_GetCmdLetter
	move.b	d0,-11(a6)
	lea	L31,a0
	cmp.b	#119,d0
	addq.w	#8,a7
	bhi	L30
	ext.w	d0
	add.w	d0,d0
	add.w	0(a0,d0.w),a0
	jmp	(a0)
L36:
	bra	L29
L37:
L50:
	move.b	-11(a6),d0
	move.w	d0,-(a7)
	pea	L2
	jsr	_GetRange
	subq.w	#1,d0
	addq.w	#6,a7
	beq	L65
	addq.w	#1,d0
	beq	L66
	sub.w	#255,d0
	beq	L67
	bra	L64
L65:
	move.w	_CutStart,d0
	addq.w	#1,d0
	move.w	d0,_LinesToAppend
	bra	L63
L66:
	move.w	_MaxLines,_LinesToAppend
	bra	L63
L67:
L64:
	jsr	_InputError
	bra	L7
L63:
	move.w	#10,-8(a6)
	bra	L29
L62:
L49:
	move.b	-11(a6),d0
	move.w	d0,-(a7)
	pea	L2
	jsr	_GetRange
	subq.w	#1,d0
	addq.w	#6,a7
	beq	L70
	addq.w	#1,d0
	beq	L71
	sub.w	#255,d0
	beq	L72
	bra	L69
L70:
	move.w	_CutStart,d0
	addq.w	#1,d0
	move.w	d0,-22(a6)
	bra	L68
L71:
	move.w	_LastLine,d0
	addq.w	#1,d0
	move.w	d0,-22(a6)
	bra	L68
L72:
L69:
	jsr	_InputError
	bra	L7
L68:
	pea	L8
	pea	_BaseName
	jsr	_strcat
	addq.w	#8,a7
	pea	L9
	pea	_BaseName
	jsr	_fopen
	move.l	d0,-32(a6)
	clr.w	-18(a6)
	addq.w	#8,a7
	bra	L74
L73:
	move.w	-20(a6),d0
	asl.w	#2,d0
	move.w	_MemStart,d1
	muls	#3,d1
	cmp.w	d0,d1
	ble	L75
L77:
	move.w	-18(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	pea	L5
	move.l	-32(a6),-(a7)
	jsr	_fprintf
	lea	12(a7),a7
	move.w	-18(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	jsr	_StringFree
	add.w	d0,-20(a6)
	addq.w	#4,a7
L76:
	addq.w	#1,-18(a6)
L74:
	move.w	-22(a6),d0
	cmp.w	-18(a6),d0
	bgt	L73
L75:
	move.l	-32(a6),-(a7)
	jsr	_fclose
	move.l	#_BaseName,(a7)
	jsr	_strlen
	subq.w	#4,d0
	move.w	d0,a0
	add.l	#_BaseName,a0
	clr.b	(a0)
	move.w	-18(a6),-20(a6)
	addq.w	#4,a7
	bra	L79
L78:
	move.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.w	-20(a6),d0
	sub.w	-18(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a1
	add.l	_Lines,a1
	move.l	(a0),(a1)
L81:
	addq.w	#1,-20(a6)
L79:
	move.w	_LastLine,d0
	cmp.w	-20(a6),d0
	bge	L78
L80:
	move.w	-18(a6),d0
	sub.w	d0,_LastLine
	bra	L29
L41:
L54:
	move.b	-11(a6),d0
	move.w	d0,-(a7)
	pea	L2
	jsr	_GetRange
	subq.w	#1,d0
	addq.w	#6,a7
	beq	L84
	sub.w	#254,d0
	beq	L85
	add.w	#255,d0
	beq	L86
	bra	L83
L84:
	move.w	_CutStart,_CurrentLine
	bra	L82
L85:
	bra	L7
L86:
	bra	L82
L83:
	jsr	_InputError
	bra	L7
L82:
	or.w	#2,_Status
	bra	L29
L45:
L58:
	pea	L10
	jsr	_printf
	move.l	8(a6),(a7)
	jsr	_fgetc
	move.w	d0,-20(a6)
	moveq	#121,d0
	cmp.w	-20(a6),d0
	addq.w	#4,a7
	beq	L88
	moveq	#89,d0
	cmp.w	-20(a6),d0
	bne	L87
L88:
	pea	L11
	jsr	_printf
	addq.w	#4,a7
	jsr	_cleanup
	clr.w	-(a7)
	jsr	_exit
	addq.w	#2,a7
L87:
	move.l	8(a6),-(a7)
	jsr	_fflush
	moveq	#0,d0
	bra	L26
L53:
L40:
	moveq	#9,d0
	bra	L26
L33:
	pea	L12
	pea	L2
	jsr	_strtok
	addq.w	#8,a7
	move.l	d0,-(a7)
	jsr	_myatoi
	move.w	d0,-2(a6)
	addq.w	#4,a7
	moveq	#43,d0
	move.w	d0,-(a7)
	pea	L2
	jsr	_strchr
	tst.l	d0
	addq.w	#6,a7
	beq	L89
	move.w	-2(a6),d0
	add.w	d0,_CurrentLine
	bra	L90
L89:
	moveq	#45,d0
	move.w	d0,-(a7)
	pea	L2
	jsr	_strchr
	tst.l	d0
	addq.w	#6,a7
	beq	L91
	move.w	-2(a6),d0
	add.w	d0,_CurrentLine
	bra	L92
L91:
	tst.w	-2(a6)
	beq	L93
	move.w	-2(a6),d0
	subq.w	#1,d0
	move.w	d0,_CurrentLine
	bra	L94
L93:
	addq.w	#1,_CurrentLine
L94:
L92:
L90:
	moveq	#0,d0
	cmp.w	_CurrentLine,d0
	ble	L95
	clr.w	_CurrentLine
L95:
	move.w	_LastLine,d0
	cmp.w	_CurrentLine,d0
	bge	L96
	addq.w	#1,d0
	move.w	d0,_CurrentLine
	bra	L29
L96:
	move.w	_CurrentLine,d0
	cmp.w	_CurrentLine,d0
	bne	L97
	addq.w	#1,d0
	move.w	d0,-(a7)
	pea	L13
	jsr	_printf
	addq.w	#6,a7
	bra	L98
L97:
	addq.w	#1,d0
	move.w	d0,-(a7)
	pea	L14
	jsr	_printf
	addq.w	#6,a7
L98:
	move.w	_CurrentLine,d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	jsr	_PrintLine
	move.w	_CurrentLine,d0
	cmp.w	_CurrentLine,d0
	addq.w	#4,a7
	bne	L99
	addq.w	#1,d0
	move.w	d0,-(a7)
	pea	L13
	jsr	_printf
	addq.w	#6,a7
	bra	L100
L99:
	addq.w	#1,d0
	move.w	d0,-(a7)
	pea	L14
	jsr	_printf
	addq.w	#6,a7
L100:
	move.l	_LineBuf,-(a7)
	pea	__iob
	jsr	_ReadLine
	move.w	d0,-20(a6)
	move.w	#254,d0
	cmp.w	-20(a6),d0
	addq.w	#8,a7
	bne	L101
	move.l	_LineBuf,a0
	moveq	#10,d0
	cmp.b	254(a0),d0
	beq	L101
	move.b	#10,254(a0)
	pea	L15
	pea	__iob+28
	jsr	_fprintf
	addq.w	#8,a7
L101:
	moveq	#1,d0
	cmp.w	-20(a6),d0
	bge	L102
	move.l	_LineBuf,-(a7)
	jsr	_strlen
	addq.w	#4,a7
	addq.w	#1,d0
	move.w	d0,-(a7)
	jsr	_MyMalloc
	move.l	d0,-16(a6)
	addq.w	#2,a7
	beq	L103
	move.w	_CurrentLine,d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	jsr	_StringFree
	move.l	_LineBuf,(a7)
	move.l	-16(a6),-(a7)
	jsr	_strcpy
	move.w	_CurrentLine,d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	-16(a6),(a0)
	addq.w	#8,a7
L103:
L102:
	bra	L29
L55:
L42:
	move.b	-11(a6),d0
	move.w	d0,-(a7)
	pea	L2
	jsr	_GetRange
	subq.w	#1,d0
	addq.w	#6,a7
	beq	L106
	addq.w	#1,d0
	beq	L107
	subq.w	#2,d0
	beq	L109
	subq.w	#1,d0
	beq	L109
	sub.w	#252,d0
	beq	L110
	bra	L105
L106:
	move.w	_CutStart,d0
	add.w	#22,d0
	move.w	d0,_CutEnd
	bra	L104
L107:
L108:
L109:
	bra	L104
L110:
	move.w	_CurrentLine,d0
	sub.w	#11,d0
	moveq	#0,d1
	cmp.w	d0,d1
	bge	L111
	move.w	_CurrentLine,d0
	sub.w	#11,d0
	bra	L112
L111:
	moveq	#0,d0
L112:
	move.w	d0,_CutStart
	move.w	_CurrentLine,d0
	add.w	#11,d0
	move.w	d0,_CutEnd
	bra	L104
L105:
	jsr	_InputError
	bra	L7
L104:
	move.w	_LastLine,d0
	cmp.w	_CutEnd,d0
	ble	L113
	move.w	_CutEnd,d0
L113:
L114:
	move.w	d0,_CutEnd
	move.w	_CutStart,-18(a6)
	bra	L116
L115:
	move.w	_CurrentLine,d0
	cmp.w	-18(a6),d0
	bne	L119
	move.w	-18(a6),d0
	addq.w	#1,d0
	move.w	d0,-(a7)
	pea	L13
	jsr	_printf
	addq.w	#6,a7
	bra	L120
L119:
	move.w	-18(a6),d0
	addq.w	#1,d0
	move.w	d0,-(a7)
	pea	L14
	jsr	_printf
	addq.w	#6,a7
L120:
	move.w	-18(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	jsr	_PrintLine
	addq.w	#4,a7
L118:
	addq.w	#1,-18(a6)
L116:
	move.w	_CutEnd,d0
	cmp.w	-18(a6),d0
	bge	L115
L117:
	bra	L29
L57:
L44:
	move.b	-11(a6),d0
	move.w	d0,-(a7)
	pea	L2
	jsr	_GetRange
	subq.w	#2,d0
	addq.w	#6,a7
	beq	L123
	addq.w	#1,d0
	beq	L124
	addq.w	#1,d0
	beq	L125
	subq.w	#3,d0
	beq	L126
	sub.w	#252,d0
	beq	L127
	bra	L122
L123:
	move.w	_CurrentLine,d0
	addq.w	#1,d0
	move.w	d0,_CutStart
	bra	L121
L124:
	move.w	_CutStart,d0
	add.w	#22,d0
	move.w	d0,_CutEnd
	bra	L121
L125:
	move.w	_CurrentLine,d0
	addq.w	#1,d0
	move.w	d0,_CutStart
	add.w	#22,d0
	move.w	d0,_CutEnd
	bra	L121
L126:
	bra	L121
L127:
	bra	L7
L122:
	jsr	_InputError
	bra	L7
L121:
	move.w	_LastLine,d0
	cmp.w	_CutEnd,d0
	ble	L128
	move.w	_CutEnd,d0
L128:
L129:
	move.w	d0,_CutEnd
	move.w	_CutEnd,_CurrentLine
	move.w	_CutStart,-18(a6)
	bra	L131
L130:
	move.w	_CurrentLine,d0
	cmp.w	-18(a6),d0
	bne	L134
	move.w	-18(a6),d0
	addq.w	#1,d0
	move.w	d0,-(a7)
	pea	L13
	jsr	_printf
	addq.w	#6,a7
	bra	L135
L134:
	move.w	-18(a6),d0
	addq.w	#1,d0
	move.w	d0,-(a7)
	pea	L14
	jsr	_printf
	addq.w	#6,a7
L135:
	move.w	-18(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	jsr	_PrintLine
	addq.w	#4,a7
L133:
	addq.w	#1,-18(a6)
L131:
	move.w	_CutEnd,d0
	cmp.w	-18(a6),d0
	bge	L130
L132:
	bra	L29
L52:
L39:
	move.b	-11(a6),d0
	move.w	d0,-(a7)
	pea	L2
	jsr	_GetRange
	subq.w	#2,d0
	addq.w	#6,a7
	beq	L138
	addq.w	#1,d0
	beq	L139
	addq.w	#1,d0
	beq	L140
	subq.w	#3,d0
	beq	L141
	sub.w	#252,d0
	beq	L142
	bra	L137
L138:
	move.w	_CurrentLine,_CutStart
	bra	L136
L139:
	move.w	_CutStart,_CutEnd
	bra	L136
L140:
	move.w	_CurrentLine,_CutStart
	move.w	_CurrentLine,_CutEnd
	bra	L136
L141:
	bra	L136
L142:
	bra	L7
L137:
	jsr	_InputError
	bra	L7
L136:
	move.w	_CutStart,-18(a6)
	bra	L144
L143:
	move.w	-18(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	jsr	_StringFree
	addq.w	#4,a7
L146:
	addq.w	#1,-18(a6)
L144:
	move.w	_CutEnd,d0
	cmp.w	-18(a6),d0
	bge	L143
L145:
	addq.w	#1,d0
	move.w	d0,-18(a6)
	bra	L148
L147:
	move.w	-18(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.w	_CutStart,d0
	add.w	-18(a6),d0
	sub.w	_CutEnd,d0
	subq.w	#1,d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a1
	add.l	_Lines,a1
	move.l	(a0),(a1)
L150:
	addq.w	#1,-18(a6)
L148:
	move.w	_LastLine,d0
	cmp.w	-18(a6),d0
	bge	L147
L149:
	move.w	_CutStart,d0
	add.w	_LastLine,d0
	sub.w	_CutEnd,d0
	move.w	d0,-18(a6)
	bra	L152
L151:
	move.w	-18(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	clr.l	(a0)
L154:
	addq.w	#1,-18(a6)
L152:
	move.w	_LastLine,d0
	cmp.w	-18(a6),d0
	bge	L151
L153:
	move.w	_CutEnd,d0
	sub.w	_CutStart,d0
	addq.w	#1,d0
	sub.w	d0,_LastLine
	move.w	_CutStart,_CurrentLine
	bra	L29
L51:
L38:
	move.b	-11(a6),d0
	move.w	d0,-(a7)
	pea	L2
	jsr	_GetRange
	move.w	d0,-18(a6)
	move.w	#255,d0
	cmp.w	-18(a6),d0
	addq.w	#6,a7
	beq	L7
L155:
	move.w	-18(a6),d0
	and.w	#1,d0
	bne	L156
	move.w	_CurrentLine,_CutStart
L156:
	move.w	-18(a6),d0
	and.w	#2,d0
	bne	L157
	move.w	_CurrentLine,_CutEnd
L157:
	move.w	_DestLine,d0
	cmp.w	_CutEnd,d0
	bgt	L158
	cmp.w	_CutStart,d0
	blt	L158
	jsr	_InputError
	bra	L29
L158:
	move.w	_CutEnd,d0
	sub.w	_CutStart,d0
	addq.w	#1,d0
	muls	_Count,d0
	move.w	d0,-22(a6)
	move.w	_MaxLines,d0
	sub.w	_LastLine,d0
	subq.w	#1,d0
	cmp.w	-22(a6),d0
	ble	L159
	move.w	-22(a6),d0
	bra	L160
L159:
	move.w	_MaxLines,d0
	sub.w	_LastLine,d0
	subq.w	#1,d0
L160:
	move.w	d0,-22(a6)
	clr.w	-18(a6)
	bra	L162
L161:
	clr.w	-20(a6)
	bra	L166
L165:
	move.w	_CutStart,d0
	add.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	jsr	_strlen
	addq.w	#4,a7
	addq.w	#1,d0
	move.w	d0,-(a7)
	jsr	_MyMalloc
	move.w	_MaxLines,d1
	sub.w	-22(a6),d1
	move.w	-18(a6),d2
	addq.w	#2,a7
	move.l	d0,-(a7)
	move.w	_CutEnd,d0
	sub.w	_CutStart,d0
	addq.w	#1,d0
	muls	d0,d2
	add.w	d2,d1
	add.w	-20(a6),d1
	ext.l	d1
	asl.l	#2,d1
	move.l	d1,a0
	add.l	_Lines,a0
	move.l	(a7)+,d0
	move.l	d0,(a0)
	beq	L16
L169:
	move.w	_CutStart,d0
	add.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	move.w	_MaxLines,d0
	sub.w	-22(a6),d0
	move.w	-18(a6),d1
	move.w	_CutEnd,d2
	sub.w	_CutStart,d2
	addq.w	#1,d2
	muls	d2,d1
	add.w	d1,d0
	add.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	jsr	_strcpy
	addq.w	#8,a7
L168:
	addq.w	#1,-20(a6)
L166:
	move.w	_CutEnd,d0
	sub.w	_CutStart,d0
	addq.w	#1,d0
	cmp.w	-20(a6),d0
	bgt	L165
L167:
L164:
	addq.w	#1,-18(a6)
L162:
	move.w	-22(a6),d0
	move.w	_CutEnd,d1
	sub.w	_CutStart,d1
	addq.w	#1,d1
	ext.l	d0
	divs	d1,d0
	cmp.w	-18(a6),d0
	bgt	L161
L163:
	clr.w	-20(a6)
	bra	L171
L170:
	move.w	_CutStart,d0
	add.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	jsr	_strlen
	addq.w	#4,a7
	addq.w	#1,d0
	move.w	d0,-(a7)
	jsr	_MyMalloc
	move.w	_MaxLines,d1
	sub.w	-22(a6),d1
	move.w	-18(a6),d2
	addq.w	#2,a7
	move.l	d0,-(a7)
	move.w	_CutEnd,d0
	sub.w	_CutStart,d0
	addq.w	#1,d0
	muls	d0,d2
	add.w	d2,d1
	add.w	-20(a6),d1
	ext.l	d1
	asl.l	#2,d1
	move.l	d1,a0
	add.l	_Lines,a0
	move.l	(a7)+,d0
	move.l	d0,(a0)
	beq	L16
L174:
	move.w	_CutStart,d0
	add.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	move.w	_MaxLines,d0
	sub.w	-22(a6),d0
	move.w	-18(a6),d1
	move.w	_CutEnd,d2
	sub.w	_CutStart,d2
	addq.w	#1,d2
	muls	d2,d1
	add.w	d1,d0
	add.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	jsr	_strcpy
	addq.w	#8,a7
L173:
	addq.w	#1,-20(a6)
L171:
	move.w	-22(a6),d0
	move.w	_CutEnd,d1
	sub.w	_CutStart,d1
	addq.w	#1,d1
	ext.l	d0
	divs	d1,d0
	swap	d0
	cmp.w	-20(a6),d0
	bgt	L170
L172:
L16:
	move.w	-18(a6),d0
	move.w	_CutEnd,d1
	sub.w	_CutStart,d1
	addq.w	#1,d1
	muls	d1,d0
	add.w	-20(a6),d0
	move.w	d0,-22(a6)
	clr.w	-18(a6)
	bra	L176
L175:
	move.w	_MaxLines,d0
	sub.w	-22(a6),d0
	add.w	-18(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-16(a6)
	move.w	_LastLine,d0
	add.w	-18(a6),d0
	move.w	d0,-20(a6)
	bra	L180
L179:
	move.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.w	-20(a6),d0
	addq.w	#1,d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a1
	add.l	_Lines,a1
	move.l	(a0),(a1)
L182:
	subq.w	#1,-20(a6)
L180:
	move.w	_DestLine,d0
	add.w	-18(a6),d0
	cmp.w	-20(a6),d0
	ble	L179
L181:
	move.w	_DestLine,d0
	add.w	-18(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	-16(a6),(a0)
L178:
	addq.w	#1,-18(a6)
L176:
	move.w	-22(a6),d0
	cmp.w	-18(a6),d0
	bgt	L175
L177:
	move.w	_DestLine,_CurrentLine
	move.w	-22(a6),d0
	add.w	d0,_LastLine
	bra	L29
L56:
L43:
	move.b	-11(a6),d0
	move.w	d0,-(a7)
	pea	L2
	jsr	_GetRange
	move.w	d0,-18(a6)
	move.w	#255,d0
	cmp.w	-18(a6),d0
	addq.w	#6,a7
	beq	L7
L183:
	move.w	-18(a6),d0
	and.w	#1,d0
	bne	L184
	move.w	_CurrentLine,_CutStart
L184:
	move.w	-18(a6),d0
	and.w	#2,d0
	bne	L185
	move.w	_CurrentLine,_CutEnd
L185:
	move.w	_DestLine,d0
	cmp.w	_CutEnd,d0
	bgt	L186
	cmp.w	_CutStart,d0
	blt	L186
	jsr	_InputError
	bra	L29
L186:
	move.w	_CutEnd,d0
	cmp.w	_DestLine,d0
	bge	L187
	move.w	_CutEnd,-18(a6)
	bra	L189
L188:
	move.w	-18(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-16(a6)
	move.w	-18(a6),-20(a6)
	bra	L193
L192:
	move.w	-20(a6),d0
	addq.w	#1,d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a1
	add.l	_Lines,a1
	move.l	(a0),(a1)
L195:
	addq.w	#1,-20(a6)
L193:
	move.w	_DestLine,d0
	move.w	-18(a6),d1
	sub.w	_CutEnd,d1
	add.w	d1,d0
	subq.w	#2,d0
	cmp.w	-20(a6),d0
	bge	L192
L194:
	move.w	_DestLine,d0
	move.w	-18(a6),d1
	sub.w	_CutEnd,d1
	add.w	d1,d0
	subq.w	#1,d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	-16(a6),(a0)
L191:
	subq.w	#1,-18(a6)
L189:
	move.w	_CutStart,d0
	cmp.w	-18(a6),d0
	ble	L188
L190:
	move.w	_DestLine,d0
	sub.w	_CutEnd,d0
	add.w	_CutStart,d0
	subq.w	#1,d0
	move.w	d0,_CurrentLine
	bra	L196
L187:
	move.w	_CutStart,-18(a6)
	bra	L198
L197:
	move.w	-18(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-16(a6)
	move.w	-18(a6),-20(a6)
	bra	L202
L201:
	move.w	-20(a6),d0
	subq.w	#1,d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a1
	add.l	_Lines,a1
	move.l	(a0),(a1)
L204:
	subq.w	#1,-20(a6)
L202:
	move.w	_DestLine,d0
	move.w	-18(a6),d1
	sub.w	_CutStart,d1
	add.w	d1,d0
	addq.w	#1,d0
	cmp.w	-20(a6),d0
	ble	L201
L203:
	move.w	_DestLine,d0
	move.w	-18(a6),d1
	sub.w	_CutStart,d1
	add.w	d1,d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	-16(a6),(a0)
L200:
	addq.w	#1,-18(a6)
L198:
	move.w	_CutEnd,d0
	cmp.w	-18(a6),d0
	bge	L197
L199:
	move.w	_DestLine,_CurrentLine
L196:
	bra	L29
L61:
L48:
	move.b	-11(a6),d0
	move.w	d0,-(a7)
	pea	L2
	jsr	_GetRange
	subq.w	#1,d0
	addq.w	#6,a7
	beq	L207
	sub.w	#254,d0
	beq	L208
	add.w	#255,d0
	beq	L209
	bra	L206
L207:
	move.w	_CutStart,_CurrentLine
	bra	L205
L208:
	bra	L7
L209:
	bra	L205
L206:
	jsr	_InputError
	bra	L7
L205:
	move.w	-10(a6),d0
	addq.w	#1,d0
	move.w	d0,-18(a6)
	pea	L17
	pea	L12
	lea	L2,a0
	add.w	d0,a0
	pea	(a0)
	jsr	_strtok
	addq.w	#8,a7
	move.l	d0,-(a7)
	jsr	_fopen
	move.l	d0,-28(a6)
	addq.w	#8,a7
	bne	L210
	pea	L18
	pea	__iob+28
	jsr	_fprintf
	addq.w	#8,a7
	bra	L7
L210:
	bra	L212
L211:
	move.l	_LineBuf,-(a7)
	jsr	_strlen
	addq.w	#4,a7
	addq.w	#1,d0
	move.w	d0,-(a7)
	jsr	_MyMalloc
	move.l	d0,-16(a6)
	addq.w	#2,a7
	beq	L213
L214:
	move.l	_LineBuf,-(a7)
	move.l	-16(a6),-(a7)
	jsr	_strcpy
	move.w	_LastLine,-20(a6)
	bra	L216
L215:
	move.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.w	-20(a6),d0
	addq.w	#1,d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a1
	add.l	_Lines,a1
	move.l	(a0),(a1)
L218:
	subq.w	#1,-20(a6)
L216:
	move.w	_CurrentLine,d0
	cmp.w	-20(a6),d0
	ble	L215
L217:
	addq.w	#1,_CurrentLine
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	-16(a6),(a0)
	addq.w	#1,_LastLine
	addq.w	#8,a7
L212:
	move.l	-28(a6),-(a7)
	move.w	#254,-(a7)
	move.l	_LineBuf,-(a7)
	jsr	_fgets
	tst.l	d0
	lea	10(a7),a7
	bne	L211
L213:
	move.l	-28(a6),-(a7)
	jsr	_fclose
	addq.w	#4,a7
	bra	L29
L35:
L60:
L47:
	move.b	-11(a6),d0
	move.w	d0,-(a7)
	pea	L2
	jsr	_GetRange
	subq.w	#1,d0
	addq.w	#6,a7
	beq	L221
	subq.w	#1,d0
	beq	L222
	addq.w	#2,d0
	beq	L223
	subq.w	#3,d0
	beq	L224
	sub.w	#252,d0
	beq	L225
	bra	L220
L221:
	move.w	_LastLine,_CutEnd
	bra	L219
L222:
	move.w	_CurrentLine,d0
	addq.w	#1,d0
	move.w	d0,_CutStart
	move.w	_LastLine,d0
	cmp.w	_CutEnd,d0
	ble	L226
	move.w	_CutEnd,d0
L226:
L227:
	move.w	d0,_CutEnd
	bra	L219
L223:
	move.w	_CurrentLine,d0
	addq.w	#1,d0
	move.w	d0,_CutStart
	move.w	_LastLine,_CutEnd
	bra	L219
L224:
	move.w	_LastLine,d0
	cmp.w	_CutEnd,d0
	ble	L228
	move.w	_CutEnd,d0
L228:
L229:
	move.w	d0,_CutEnd
	bra	L219
L225:
	bra	L7
L220:
	jsr	_InputError
	bra	L7
L219:
	move.w	-10(a6),d0
	addq.w	#1,d0
	move.w	d0,-18(a6)
	lea	L2,a0
	add.w	d0,a0
	pea	(a0)
	jsr	_strlen
	moveq	#1,d1
	cmp.w	d0,d1
	addq.w	#4,a7
	bge	L230
	pea	L19
	lea	L2,a0
	move.w	-18(a6),d0
	add.w	d0,a0
	pea	(a0)
	jsr	_strtok
	addq.w	#8,a7
	move.l	d0,-(a7)
	pea	L3
	jsr	_strcpy
	addq.w	#8,a7
	pea	L3
	jsr	_Unescape
	addq.w	#4,a7
L230:
	bra	L232
L231:
	move.w	_CutStart,-20(a6)
	bra	L235
L234:
	pea	L3
	move.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	jsr	_strstr
	move.l	d0,-16(a6)
	addq.w	#8,a7
	bne	L236
L238:
L237:
	addq.w	#1,-20(a6)
L235:
	move.w	_CutEnd,d0
	cmp.w	-20(a6),d0
	bge	L234
L236:
	tst.l	-16(a6)
	beq	L239
	move.w	_CurrentLine,d0
	cmp.w	-20(a6),d0
	bne	L240
	move.w	-20(a6),d0
	addq.w	#1,d0
	move.w	d0,-(a7)
	pea	L13
	jsr	_printf
	addq.w	#6,a7
	bra	L241
L240:
	move.w	-20(a6),d0
	addq.w	#1,d0
	move.w	d0,-(a7)
	pea	L14
	jsr	_printf
	addq.w	#6,a7
L241:
	move.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	jsr	_PrintLine
	moveq	#5,d0
	cmp.b	-11(a6),d0
	addq.w	#4,a7
	bne	L242
	pea	L20
	jsr	_printf
	move.l	#__iob,(a7)
	jsr	_fgetc
	move.w	d0,-18(a6)
	moveq	#89,d1
	cmp.w	d0,d1
	addq.w	#4,a7
	beq	L244
	moveq	#121,d0
	cmp.w	-18(a6),d0
	beq	L244
	moveq	#10,d0
	cmp.w	-18(a6),d0
	bne	L243
L244:
	move.w	-20(a6),_CurrentLine
	pea	L11
	jsr	_printf
	addq.w	#4,a7
	bra	L233
L243:
	move.w	-20(a6),d0
	addq.w	#1,d0
	move.w	d0,_CutStart
	pea	L11
	jsr	_printf
	addq.w	#4,a7
	bra	L245
L242:
	move.w	-20(a6),_CurrentLine
	bra	L233
L245:
	bra	L246
L239:
	pea	L21
	jsr	_printf
	addq.w	#4,a7
	bra	L233
L246:
L232:
	bra	L231
L233:
	bra	L29
L46:
L59:
L34:
	move.b	-11(a6),d0
	move.w	d0,-(a7)
	pea	L2
	jsr	_GetRange
	subq.w	#1,d0
	addq.w	#6,a7
	beq	L249
	subq.w	#1,d0
	beq	L250
	addq.w	#2,d0
	beq	L251
	subq.w	#3,d0
	beq	L252
	sub.w	#252,d0
	beq	L253
	bra	L248
L249:
	move.w	_LastLine,_CutEnd
	bra	L247
L250:
	move.w	_CurrentLine,d0
	addq.w	#1,d0
	move.w	d0,_CutStart
	move.w	_LastLine,d0
	cmp.w	_CutEnd,d0
	ble	L254
	move.w	_CutEnd,d0
L254:
L255:
	move.w	d0,_CutEnd
	bra	L247
L251:
	move.w	_CurrentLine,d0
	addq.w	#1,d0
	move.w	d0,_CutStart
	move.w	_LastLine,_CutEnd
	bra	L247
L252:
	move.w	_LastLine,d0
	cmp.w	_CutEnd,d0
	ble	L256
	move.w	_CutEnd,d0
L256:
L257:
	move.w	d0,_CutEnd
	bra	L247
L253:
	bra	L7
L248:
	jsr	_InputError
	bra	L7
L247:
	move.w	-10(a6),d0
	addq.w	#1,d0
	move.w	d0,-18(a6)
	clr.w	-22(a6)
	move.w	-4(a6),d0
	subq.w	#1,d0
	move.w	d0,a0
	add.l	#L2,a0
	moveq	#4,d0
	cmp.b	(a0),d0
	bne	L258
	bra	L260
L259:
	move.w	-22(a6),d0
	addq.w	#1,-22(a6)
	move.w	d0,a0
	add.l	#L4,a0
	move.b	-19(a6),(a0)
L260:
	move.w	-4(a6),d0
	addq.w	#1,-4(a6)
	move.w	d0,a0
	add.l	#L1,a0
	move.b	(a0),d0
	ext.w	d0
	move.w	d0,-20(a6)
	moveq	#10,d1
	cmp.w	d0,d1
	beq	L262
	moveq	#4,d0
	cmp.w	-20(a6),d0
	bne	L259
L262:
L261:
	move.w	-22(a6),a0
	add.l	#L4,a0
	clr.b	(a0)
	addq.w	#1,-4(a6)
	pea	L4
	jsr	_Unescape
	addq.w	#4,a7
L258:
	lea	L2,a0
	move.w	-18(a6),d0
	add.w	d0,a0
	pea	(a0)
	jsr	_strlen
	moveq	#1,d1
	cmp.w	d0,d1
	addq.w	#4,a7
	bge	L263
	pea	L19
	lea	L2,a0
	move.w	-18(a6),d0
	add.w	d0,a0
	pea	(a0)
	jsr	_strtok
	addq.w	#8,a7
	move.l	d0,-(a7)
	pea	L3
	jsr	_strcpy
	tst.w	-22(a6)
	bne	L264
	clr.b	L4
L264:
	addq.w	#8,a7
	pea	L3
	jsr	_Unescape
	addq.w	#4,a7
L263:
	move.l	#L4,-16(a6)
	clr.w	-24(a6)
	bra	L266
L265:
	addq.w	#1,-24(a6)
	pea	L3
	jsr	_strlen
	ext.l	d0
	add.l	d0,-16(a6)
	addq.w	#4,a7
L266:
	pea	L3
	move.l	-16(a6),-(a7)
	jsr	_strstr
	move.l	d0,-16(a6)
	addq.w	#8,a7
	bne	L265
L267:
	move.w	_CutStart,-20(a6)
	bra	L269
L268:
	move.w	#1,-22(a6)
	bra	L273
L272:
	move.w	_CurrentLine,d0
	cmp.w	-20(a6),d0
	bne	L275
	move.w	-20(a6),d0
	addq.w	#1,d0
	move.w	d0,-(a7)
	pea	L13
	jsr	_printf
	addq.w	#6,a7
	bra	L276
L275:
	move.w	-20(a6),d0
	addq.w	#1,d0
	move.w	d0,-(a7)
	pea	L14
	jsr	_printf
	addq.w	#6,a7
L276:
	move.l	-16(a6),-(a7)
	pea	L5
	jsr	_printf
	moveq	#4,d0
	cmp.b	-11(a6),d0
	addq.w	#8,a7
	bne	L277
	pea	L20
	jsr	_printf
	pea	__iob
	jsr	_fgetc
	move.w	d0,-18(a6)
	moveq	#89,d1
	cmp.w	d0,d1
	addq.w	#4,a7
	beq	L279
	moveq	#121,d0
	cmp.w	-18(a6),d0
	beq	L279
	moveq	#10,d0
	cmp.w	-18(a6),d0
	bne	L278
L279:
	move.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	jsr	_StringFree
	move.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	-16(a6),(a0)
	move.w	-24(a6),d0
	add.w	d0,-22(a6)
	addq.w	#4,a7
	bra	L280
L278:
	addq.w	#1,-22(a6)
L280:
	move.l	#L11,(a7)
	jsr	_printf
	addq.w	#4,a7
	bra	L281
L277:
	move.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	jsr	_StringFree
	move.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	-16(a6),(a0)
	move.w	-24(a6),d0
	add.w	d0,-22(a6)
	addq.w	#4,a7
	bra	L274
L281:
L273:
	move.w	-22(a6),-(a7)
	pea	L4
	pea	L3
	move.w	-20(a6),d0
	ext.l	d0
	asl.l	#2,d0
	move.l	d0,a0
	add.l	_Lines,a0
	move.l	(a0),-(a7)
	jsr	_ReplaceString
	move.l	d0,-16(a6)
	lea	14(a7),a7
	bne	L272
L274:
L271:
	addq.w	#1,-20(a6)
L269:
	move.w	_CutEnd,d0
	cmp.w	-20(a6),d0
	bge	L268
L270:
	bra	L29
L32:
L30:
	jsr	_InputError
L29:
L7:
	clr.w	-18(a6)
	bra	L283
L282:
	move.w	-4(a6),d0
	add.w	-18(a6),d0
	move.w	d0,a0
	add.l	#L1,a0
	move.w	-18(a6),a1
	add.l	#L1,a1
	move.b	(a0),(a1)
L285:
	addq.w	#1,-18(a6)
L283:
	move.w	-6(a6),d0
	sub.w	-4(a6),d0
	cmp.w	-18(a6),d0
	bge	L282
L284:
	move.w	-18(a6),a0
	add.l	#L1,a0
	clr.b	(a0)
	bra	L286
L28:
	clr.b	L1
L286:
	move.w	-8(a6),d0
L26:
	unlk	a6
	rts
L22:
	link	a6,#-32
	bra	L23
L31:
	dc.w	L32-L31,L30-L31,L33-L31,L30-L31,L34-L31
	dc.w	L35-L31,L36-L31,L30-L31,L30-L31,L30-L31
	dc.w	L30-L31,L30-L31,L30-L31,L30-L31,L30-L31
	dc.w	L30-L31,L30-L31,L30-L31,L30-L31,L30-L31
	dc.w	L30-L31,L30-L31,L30-L31,L30-L31,L30-L31
	dc.w	L30-L31,L30-L31,L30-L31,L30-L31,L30-L31
	dc.w	L30-L31,L30-L31,L30-L31,L30-L31,L30-L31
	dc.w	L30-L31,L30-L31,L30-L31,L30-L31,L30-L31
	dc.w	L30-L31,L30-L31,L30-L31,L30-L31,L30-L31
	dc.w	L30-L31,L30-L31,L30-L31,L30-L31,L30-L31
	dc.w	L30-L31,L30-L31,L30-L31,L30-L31,L30-L31
	dc.w	L30-L31,L30-L31,L30-L31,L30-L31,L30-L31
	dc.w	L30-L31,L30-L31,L30-L31,L30-L31,L30-L31
	dc.w	L37-L31,L30-L31,L38-L31,L39-L31,L40-L31
	dc.w	L30-L31,L30-L31,L30-L31,L41-L31,L30-L31
	dc.w	L30-L31,L42-L31,L43-L31,L30-L31,L30-L31
	dc.w	L44-L31,L45-L31,L46-L31,L47-L31,L48-L31
	dc.w	L30-L31,L30-L31,L49-L31,L30-L31,L30-L31
	dc.w	L30-L31,L30-L31,L30-L31,L30-L31,L30-L31
	dc.w	L30-L31,L30-L31,L50-L31,L30-L31,L51-L31
	dc.w	L52-L31,L53-L31,L30-L31,L30-L31,L30-L31
	dc.w	L54-L31,L30-L31,L30-L31,L55-L31,L56-L31
	dc.w	L30-L31,L30-L31,L57-L31,L58-L31,L59-L31
	dc.w	L60-L31,L61-L31,L30-L31,L30-L31,L62-L31
	.bss
L1:
	ds.b	255
L2:
	ds.b	255
L3:
	ds.b	255
L4:
	ds.b	255
	.text
L288:
	dc.b	$a,$4,$0,$0,$0
	.even
	.globl _GetNextCmd
_GetNextCmd:
	bra	L289
L290:
	lea	L288,a0
	lea	-13(a6),a1
	move.b	(a0)+,(a1)+
	move.b	(a0)+,(a1)+
	move.b	(a0)+,(a1)+
	move.b	(a0)+,(a1)+
	move.b	(a0)+,(a1)+
	pea	-8(a6)
	move.l	8(a6),-(a7)
	jsr	_GetCmdLetter
	move.w	d0,-6(a6)
	sub.w	#114,d0
	addq.w	#8,a7
	beq	L293
	add.w	#32,d0
	beq	L294
	add.w	#78,d0
	beq	L296
	subq.w	#1,d0
	beq	L296
	sub.w	#78,d0
	beq	L297
	sub.w	#32,d0
	beq	L298
	subq.w	#1,d0
	beq	L299
	add.w	#32,d0
	beq	L300
	add.w	#82,d0
	beq	L301
	subq.w	#4,d0
	beq	L302
	bra	L292
L293:
L294:
L295:
L296:
L297:
L298:
	bra	L291
L299:
L300:
L301:
	lea	-13(a6),a0
	move.b	#59,2(a0)
	lea	-13(a6),a0
	clr.b	3(a0)
	bra	L291
L302:
	lea	-13(a6),a0
	move.b	#59,2(a0)
	lea	-13(a6),a0
	clr.b	3(a0)
	bra	L291
L292:
	lea	-13(a6),a0
	move.b	#59,2(a0)
	lea	-13(a6),a0
	move.b	-5(a6),3(a0)
	lea	-13(a6),a0
	clr.b	4(a0)
L291:
	move.l	8(a6),-(a7)
	move.l	12(a6),-(a7)
	jsr	_strcpy
	addq.w	#8,a7
	pea	-13(a6)
	move.l	12(a6),-(a7)
	jsr	_strpbrk
	move.l	d0,-4(a6)
	beq	L303
	move.l	-4(a6),a0
	moveq	#59,d0
	cmp.b	(a0),d0
	beq	L304
	moveq	#10,d0
	cmp.b	(a0),d0
	beq	L304
	moveq	#4,d0
	cmp.b	(a0),d0
	beq	L304
	addq.l	#1,-4(a6)
	bra	L306
L305:
	addq.l	#1,-4(a6)
L306:
	move.l	-4(a6),a0
	moveq	#32,d0
	cmp.b	(a0),d0
	beq	L305
	moveq	#9,d0
	cmp.b	(a0),d0
	beq	L305
L307:
	moveq	#10,d0
	cmp.b	(a0),d0
	beq	L308
	moveq	#59,d0
	cmp.b	(a0),d0
	beq	L308
	moveq	#4,d0
	cmp.b	(a0),d0
	beq	L308
	subq.l	#1,-4(a6)
L308:
L304:
	move.l	-4(a6),a0
	clr.b	1(a0)
	move.l	12(a6),-(a7)
	jsr	_strlen
	bra	L309
L303:
	moveq	#0,d0
L309:
	unlk	a6
	rts
L289:
	link	a6,#-14
	bra	L290
L311:
	dc.b	$61,$41,$63,$43,$64,$44,$65,$45,$69,$49,$6c,$4c
	dc.b	$6d,$4d,$70,$50,$71,$51,$72,$52,$73,$53,$74,$54
	dc.b	$77,$57,$3f,$0
	.even
	.globl _GetCmdLetter
_GetCmdLetter:
	bra	L312
L313:
	move.w	#3,-2(a6)
	move.l	8(a6),-8(a6)
	bra	L315
L314:
	addq.l	#1,-8(a6)
L315:
	move.l	-8(a6),a0
	moveq	#32,d0
	cmp.b	(a0),d0
	beq	L314
	moveq	#9,d0
	cmp.b	(a0),d0
	beq	L314
L316:
	moveq	#10,d0
	cmp.b	(a0),d0
	beq	L318
	moveq	#59,d0
	cmp.b	(a0),d0
	beq	L318
	moveq	#4,d0
	cmp.b	(a0),d0
	bne	L317
L318:
	moveq	#2,d0
	bra	L319
L317:
	moveq	#46,d0
	cmp.b	(a0),d0
	beq	L321
	moveq	#35,d0
	cmp.b	(a0),d0
	bne	L320
L321:
	addq.l	#1,-8(a6)
	bra	L323
L322:
	addq.l	#1,-8(a6)
L323:
	move.l	-8(a6),a0
	moveq	#32,d0
	cmp.b	(a0),d0
	beq	L322
	moveq	#9,d0
	cmp.b	(a0),d0
	beq	L322
L324:
	moveq	#10,d0
	cmp.b	(a0),d0
	beq	L326
	moveq	#59,d0
	cmp.b	(a0),d0
	bne	L325
L326:
	moveq	#2,d0
	bra	L319
	bra	L327
L325:
	move.w	#1,-2(a6)
L327:
L320:
	moveq	#3,d0
	cmp.w	-2(a6),d0
	bne	L328
	bra	L330
L329:
	move.l	-8(a6),a0
	move.b	(a0),d0
	ext.w	d0
	move.w	d0,a0
	add.l	#___atab,a0
	move.b	(a0),d0
	and.b	#4,d0
	bne	L332
	move.l	-8(a6),a0
	move.b	(a0),d0
	sub.b	#10,d0
	beq	L335
	sub.b	#49,d0
	beq	L336
	add.b	#55,d0
	beq	L337
	sub.b	#39,d0
	beq	L338
	subq.b	#2,d0
	beq	L339
	bra	L334
L335:
L336:
L337:
	bra	L333
L338:
L339:
	addq.l	#1,-8(a6)
	bra	L330
L334:
	move.w	#1,-2(a6)
L333:
	bra	L331
	bra	L340
L332:
	addq.l	#1,-8(a6)
L340:
L330:
	move.l	-8(a6),a0
	sub.l	8(a6),a0
	move.l	a0,-(a7)
	move.l	8(a6),-(a7)
	jsr	_strlen
	ext.l	d0
	addq.w	#4,a7
	move.l	(a7)+,a0
	cmp.l	a0,d0
	bgt	L329
L331:
L328:
	moveq	#3,d0
	cmp.w	-2(a6),d0
	bne	L341
	moveq	#2,d0
	bra	L319
L341:
	pea	L311
	move.l	8(a6),-(a7)
	jsr	_strpbrk
	move.l	d0,-8(a6)
	beq	L342
	move.l	-8(a6),a0
	moveq	#63,d0
	cmp.b	(a0),d0
	bne	L343
	addq.l	#1,-8(a6)
	bra	L345
L344:
	addq.l	#1,-8(a6)
L345:
	move.l	-8(a6),a0
	moveq	#32,d0
	cmp.b	(a0),d0
	beq	L344
	moveq	#9,d0
	cmp.b	(a0),d0
	beq	L344
L346:
	sub.l	8(a6),a0
	move.l	a0,d0
	move.l	12(a6),a0
	move.w	d0,(a0)
	move.l	-8(a6),a0
	moveq	#114,d0
	cmp.b	(a0),d0
	beq	L348
	moveq	#82,d0
	cmp.b	(a0),d0
	bne	L347
L348:
	moveq	#4,d0
	bra	L319
L347:
	moveq	#115,d0
	cmp.b	(a0),d0
	beq	L350
	moveq	#83,d0
	cmp.b	(a0),d0
	bne	L349
L350:
	moveq	#5,d0
	bra	L319
L349:
	moveq	#0,d0
	bra	L319
L343:
	sub.l	8(a6),a0
	move.l	a0,d0
	move.l	12(a6),a0
	move.w	d0,(a0)
	move.l	-8(a6),a0
	move.b	(a0),d0
	ext.w	d0
	bra	L319
L342:
	moveq	#0,d0
L319:
	unlk	a6
	rts
L312:
	link	a6,#-8
	bra	L313
L352:
	dc.b	$2c,$3f,$0,$0,$0
	.even
	.globl _GetRange
_GetRange:
	bra	L353
L354:
	clr.w	-4(a6)
	move.w	#1,-6(a6)
	lea	L352,a0
	lea	-268(a6),a1
	move.b	(a0)+,(a1)+
	move.b	(a0)+,(a1)+
	move.b	(a0)+,(a1)+
	move.b	(a0)+,(a1)+
	move.b	(a0)+,(a1)+
	lea	-263(a6),a0
	move.l	a0,-272(a6)
	moveq	#4,d0
	cmp.b	13(a6),d0
	beq	L356
	moveq	#5,d0
	cmp.b	13(a6),d0
	bne	L355
L356:
	move.b	#63,13(a6)
L355:
	bra	L358
L357:
	moveq	#32,d0
	cmp.b	(a0),d0
	beq	L361
	moveq	#9,d0
	cmp.b	(a0),d0
	bne	L360
L361:
	addq.l	#1,8(a6)
	bra	L358
L360:
	addq.l	#1,8(a6)
	move.l	-272(a6),a1
	move.b	(a0),(a1)
	move.l	-272(a6),a0
	addq.l	#1,-272(a6)
	move.b	13(a6),d0
	cmp.b	(a0),d0
	beq	L359
L362:
L358:
	move.l	8(a6),a0
	tst.b	(a0)
	bne	L357
L359:
	move.l	-272(a6),a0
	clr.b	(a0)
	lea	-263(a6),a0
	move.l	a0,-272(a6)
	move.w	_CurrentLine,d0
	sub.w	#11,d0
	moveq	#0,d1
	cmp.w	d0,d1
	bge	L363
	move.w	_CurrentLine,d0
	sub.w	#11,d0
	bra	L364
L363:
	moveq	#0,d0
L364:
	move.w	d0,_CutStart
	add.w	#22,d0
	move.w	_LastLine,d1
	addq.w	#1,d1
	cmp.w	d0,d1
	blt	L365
	move.w	_CutStart,d0
	add.w	#22,d0
	bra	L366
L365:
	move.w	_LastLine,d0
	addq.w	#1,d0
L366:
	move.w	d0,_CutEnd
	move.w	#1,_Count
	move.l	-272(a6),a0
	move.b	13(a6),d0
	cmp.b	(a0),d0
	beq	L368
	move.l	-272(a6),-(a7)
	jsr	_strlen
	tst.w	d0
	addq.w	#4,a7
	bne	L367
L368:
	move.w	-4(a6),d0
	bra	L369
L367:
	lea	-268(a6),a0
	move.b	13(a6),2(a0)
	lea	-268(a6),a0
	clr.b	3(a0)
	move.l	-272(a6),a0
	moveq	#44,d0
	cmp.b	(a0),d0
	bne	L370
	move.w	-6(a6),d0
	add.w	d0,d0
	move.w	d0,-6(a6)
	addq.l	#1,-272(a6)
	move.l	-272(a6),a0
	moveq	#44,d0
	cmp.b	(a0),d0
	bne	L371
	move.w	-6(a6),d0
	add.w	d0,d0
	move.w	d0,-6(a6)
L371:
L370:
	pea	-268(a6)
	pea	-263(a6)
	jsr	_strtok
	move.l	d0,-272(a6)
	move.l	-272(a6),-(a7)
	jsr	_strlen
	tst.w	d0
	addq.w	#4,a7
	beq	L372
	move.w	-6(a6),d0
	or.w	d0,-4(a6)
L372:
	bra	L374
L373:
	move.l	-272(a6),-(a7)
	jsr	_strlen
	tst.w	d0
	addq.w	#4,a7
	beq	L376
	move.l	-272(a6),a0
	move.b	(a0),-273(a6)
	move.b	(a0),d0
	sub.b	#43,d0
	beq	L379
	subq.b	#2,d0
	beq	L380
	bra	L378
L379:
	moveq	#8,d0
	cmp.w	-6(a6),d0
	bne	L381
	jsr	_InputError
	move.w	#255,d0
	bra	L369
L381:
	move.w	#1,-2(a6)
	addq.l	#1,-272(a6)
	bra	L377
L380:
	moveq	#8,d0
	cmp.w	-6(a6),d0
	bne	L382
	jsr	_InputError
	move.w	#255,d0
	bra	L369
L382:
	move.w	#-1,-2(a6)
	addq.l	#1,-272(a6)
	bra	L377
L378:
	clr.w	-2(a6)
L377:
	move.l	-272(a6),-(a7)
	jsr	_myatoi
	subq.w	#1,d0
	move.w	d0,-8(a6)
	tst.w	-2(a6)
	addq.w	#4,a7
	beq	L383
	move.w	_CurrentLine,d0
	move.w	-2(a6),d1
	move.w	-8(a6),d2
	addq.w	#1,d2
	muls	d2,d1
	add.w	d1,d0
	move.w	d0,-8(a6)
L383:
	move.w	-6(a6),d0
	subq.w	#1,d0
	beq	L386
	subq.w	#1,d0
	beq	L387
	subq.w	#2,d0
	beq	L388
	subq.w	#4,d0
	beq	L389
	bra	L385
L386:
	moveq	#0,d0
	cmp.w	-8(a6),d0
	bge	L392
	move.w	-8(a6),d0
L392:
L393:
	move.w	_LastLine,d1
	addq.w	#1,d1
	cmp.w	d0,d1
	blt	L390
	moveq	#0,d0
	cmp.w	-8(a6),d0
	bge	L394
	move.w	-8(a6),d0
L394:
L395:
	bra	L391
L390:
	move.w	_LastLine,d0
	addq.w	#1,d0
L391:
	move.w	d0,_CutStart
	bra	L384
L387:
	move.w	_CutStart,d0
	cmp.w	-8(a6),d0
	ble	L396
	move.w	#255,d0
	bra	L369
L396:
	move.w	_LastLine,d0
	addq.w	#1,d0
	cmp.w	-8(a6),d0
	blt	L397
	move.w	-8(a6),d0
	bra	L398
L397:
	move.w	_LastLine,d0
	addq.w	#1,d0
L398:
	move.w	d0,_CutEnd
	bra	L384
L388:
	moveq	#0,d0
	cmp.w	-8(a6),d0
	bge	L401
	move.w	-8(a6),d0
L401:
L402:
	move.w	_LastLine,d1
	addq.w	#1,d1
	cmp.w	d0,d1
	blt	L399
	moveq	#0,d0
	cmp.w	-8(a6),d0
	bge	L403
	move.w	-8(a6),d0
L403:
L404:
	bra	L400
L399:
	move.w	_LastLine,d0
	addq.w	#1,d0
L400:
	move.w	d0,_DestLine
	bra	L384
L389:
	move.w	-8(a6),d0
	addq.w	#1,d0
	move.w	d0,_Count
	bra	L384
L385:
	jsr	_InputError
	move.w	#255,d0
	bra	L369
L384:
L376:
	move.l	-272(a6),a0
	move.l	a0,-(a7)
	move.l	-272(a6),-(a7)
	jsr	_strlen
	ext.l	d0
	addq.w	#4,a7
	move.l	(a7)+,a0
	add.l	d0,a0
	moveq	#44,d0
	cmp.b	1(a0),d0
	bne	L405
	move.w	-6(a6),d0
	add.w	d0,d0
	move.w	d0,-6(a6)
L405:
	pea	-268(a6)
	clr.l	-(a7)
	jsr	_strtok
	move.l	d0,-272(a6)
	bne	L406
	move.w	-4(a6),d0
	bra	L369
L406:
	move.w	-6(a6),d0
	add.w	d0,d0
	move.w	d0,-6(a6)
	move.l	-272(a6),-(a7)
	jsr	_strlen
	tst.w	d0
	addq.w	#4,a7
	beq	L407
	move.w	-6(a6),d0
	or.w	d0,-4(a6)
L407:
	addq.w	#8,a7
L374:
	bra	L373
L375:
L369:
	unlk	a6
	rts
L353:
	link	a6,#-274
	bra	L354
L410:
	dc.b	$2e,$0
L409:
	dc.b	$23,$0
	.even
	.globl _myatoi
_myatoi:
	bra	L411
L412:
	tst.l	8(a6)
	bne	L413
	moveq	#0,d0
	bra	L414
L413:
	pea	L409
	move.l	8(a6),-(a7)
	jsr	_strcmp
	tst.w	d0
	addq.w	#8,a7
	bne	L415
	move.w	_LastLine,d0
	addq.w	#2,d0
	bra	L414
L415:
	pea	L410
	move.l	8(a6),-(a7)
	jsr	_strcmp
	tst.w	d0
	addq.w	#8,a7
	bne	L416
	move.w	_CurrentLine,d0
	addq.w	#1,d0
	bra	L414
L416:
	move.l	8(a6),-(a7)
	jsr	_atoi
L414:
	unlk	a6
	rts
L411:
	link	a6,#0
	bra	L412
L418:
	dc.b	$45,$6e,$74,$72,$79,$20,$65,$72,$72,$6f,$72,$a
	dc.b	$0
	.even
	.globl _InputError
_InputError:
	bra	L419
L420:
	pea	L418
	pea	__iob+28
	jsr	_fprintf
L421:
	unlk	a6
	rts
L419:
	link	a6,#0
	bra	L420
	.even
	.globl _ReplaceString
_ReplaceString:
	bra	L423
L424:
	move.l	8(a6),-4(a6)
	clr.w	-10(a6)
	bra	L426
L425:
	move.l	12(a6),-(a7)
	move.l	-4(a6),-(a7)
	jsr	_strstr
	move.l	d0,-4(a6)
	addq.w	#8,a7
	bne	L429
	moveq	#0,d0
	bra	L430
L429:
	move.w	20(a6),d0
	subq.w	#1,d0
	cmp.w	-10(a6),d0
	beq	L427
L431:
	move.l	12(a6),-(a7)
	jsr	_strlen
	ext.l	d0
	add.l	d0,-4(a6)
	addq.w	#4,a7
L428:
	addq.w	#1,-10(a6)
L426:
	move.w	20(a6),d0
	cmp.w	-10(a6),d0
	bgt	L425
L427:
	move.l	8(a6),-(a7)
	jsr	_strlen
	move.l	d0,(a7)
	move.l	16(a6),-(a7)
	jsr	_strlen
	move.l	d0,d1
	addq.w	#4,a7
	move.l	(a7)+,d0
	add.w	d1,d0
	move.l	d0,-(a7)
	move.l	12(a6),-(a7)
	jsr	_strlen
	move.l	d0,d1
	addq.w	#4,a7
	move.l	(a7)+,d0
	sub.w	d1,d0
	move.w	d0,-10(a6)
	move.w	#254,d1
	cmp.w	d0,d1
	bge	L432
	moveq	#0,d0
	bra	L430
L432:
	addq.w	#1,d0
	move.w	d0,-(a7)
	jsr	_MyMalloc
	move.l	d0,-8(a6)
	addq.w	#2,a7
	bne	L433
	moveq	#0,d0
	bra	L430
L433:
	clr.w	-10(a6)
	bra	L435
L434:
	move.l	8(a6),a0
	move.w	-10(a6),d0
	add.w	d0,a0
	move.l	-8(a6),a1
	add.w	d0,a1
	move.b	(a0),(a1)
L437:
	addq.w	#1,-10(a6)
L435:
	move.w	-10(a6),d0
	ext.l	d0
	move.l	-4(a6),a0
	sub.l	8(a6),a0
	cmp.l	d0,a0
	bgt	L434
L436:
	move.l	-8(a6),a0
	move.w	-10(a6),d0
	add.w	d0,a0
	clr.b	(a0)
	move.l	16(a6),-(a7)
	move.l	-8(a6),-(a7)
	jsr	_strcat
	addq.w	#8,a7
	move.l	-4(a6),a0
	move.l	a0,-(a7)
	move.l	12(a6),-(a7)
	jsr	_strlen
	addq.w	#4,a7
	ext.l	d0
	move.l	(a7)+,a0
	add.l	d0,a0
	pea	(a0)
	move.l	-8(a6),-(a7)
	jsr	_strcat
	move.l	-8(a6),d0
L430:
	unlk	a6
	rts
L423:
	link	a6,#-10
	bra	L424
	.even
	.globl _Unescape
_Unescape:
	bra	L439
L440:
	clr.w	-4(a6)
	clr.w	-6(a6)
	clr.w	-2(a6)
	bra	L442
L441:
	move.w	-2(a6),a0
	add.l	8(a6),a0
	moveq	#22,d0
	cmp.b	(a0),d0
	bne	L445
	move.w	#1,-6(a6)
	bra	L444
L445:
	tst.w	-6(a6)
	beq	L446
	move.w	-2(a6),a0
	add.l	8(a6),a0
	moveq	#68,d0
	cmp.b	(a0),d0
	bne	L447
	move.w	-4(a6),d0
	addq.w	#1,-4(a6)
	move.w	d0,a0
	add.l	8(a6),a0
	move.b	#4,(a0)
	bra	L448
L447:
	move.w	-4(a6),d0
	addq.w	#1,-4(a6)
	move.w	d0,a0
	add.l	8(a6),a0
	move.b	#22,(a0)
	move.w	-2(a6),a0
	add.l	8(a6),a0
	move.w	-4(a6),d0
	addq.w	#1,-4(a6)
	move.w	d0,a1
	add.l	8(a6),a1
	move.b	(a0),(a1)
L448:
	clr.w	-6(a6)
	bra	L449
L446:
	move.w	-2(a6),a0
	add.l	8(a6),a0
	move.w	-4(a6),d0
	addq.w	#1,-4(a6)
	move.w	d0,a1
	add.l	8(a6),a1
	move.b	(a0),(a1)
L449:
L444:
	addq.w	#1,-2(a6)
L442:
	move.l	8(a6),-(a7)
	jsr	_strlen
	cmp.w	-2(a6),d0
	addq.w	#4,a7
	bgt	L441
L443:
	move.w	-4(a6),a0
	add.l	8(a6),a0
	clr.b	(a0)
L450:
	unlk	a6
	rts
L439:
	link	a6,#-6
	bra	L440
L454:
	dc.b	$25,$63,$0
L453:
	dc.b	$25,$63,$5e,$0
L452:
	dc.b	$9,$0
	.even
	.globl _PrintLine
_PrintLine:
	bra	L455
L456:
	clr.w	-2(a6)
	bra	L458
L457:
	move.l	8(a6),a0
	move.w	-2(a6),d0
	add.w	d0,a0
	moveq	#32,d0
	cmp.b	(a0),d0
	ble	L461
	move.l	8(a6),a0
	move.w	-2(a6),d0
	add.w	d0,a0
	moveq	#9,d0
	cmp.b	(a0),d0
	bne	L462
	pea	L452
	jsr	_printf
	addq.w	#4,a7
	bra	L463
L462:
	move.l	8(a6),a0
	move.w	-2(a6),d0
	add.w	d0,a0
	move.b	(a0),d0
	ext.w	d0
	muls	#3,d0
	move.l	d0,a0
	add.l	#_ControlChars,a0
	move.b	1(a0),d0
	ext.w	d0
	move.w	d0,-(a7)
	pea	L453
	jsr	_printf
	addq.w	#6,a7
L463:
	bra	L464
L461:
	move.l	8(a6),a0
	move.w	-2(a6),d0
	add.w	d0,a0
	move.b	(a0),d0
	ext.w	d0
	move.w	d0,-(a7)
	pea	L454
	jsr	_printf
	addq.w	#6,a7
L464:
L460:
	addq.w	#1,-2(a6)
L458:
	move.l	8(a6),-(a7)
	jsr	_strlen
	subq.w	#1,d0
	cmp.w	-2(a6),d0
	addq.w	#4,a7
	bgt	L457
L459:
	pea	L11
	jsr	_printf
L465:
	unlk	a6
	rts
L455:
	link	a6,#-2
	bra	L456
